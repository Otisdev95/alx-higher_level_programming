How to Use 3-say_my_name.py
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Don", "Simon")
	My name is Don Simon

::

	>>> say_my_name("Ben Carson", "Glazer")
	My name is Ben Carson Glazer

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

	>>> say_my_name("Betty")
	My name is Betty

Invalid Names
=============

The ``first_name`` and ``last_name```parameters must be strings. Otherwise,
a TypeError is raised.

::

	>>> say_my_name(1, "Christie")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("McTominay", ["Travers", "Noah", "Goodie"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name({"Christiano": 6, "Ronaldo": 23}, 7.7)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

At least one name must be provided.

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
